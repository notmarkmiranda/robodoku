require "minitest"
require "./lib/solver"
require "minitest/pride"
require "minitest/autorun"

class SolverTest < Minitest::Test
  def setup
    puzzle_text = " 26594317\n715638942\n394721865\n163459278\n948267153\n257813694\n531942786\n482176539\n679385421"
    @solver = Solver.new(puzzle_text)
  end

  def test_it_can_parse_puzzle_text
    expected = [" 26594317", "715638942", "394721865", "163459278", "948267153", "257813694", "531942786", "482176539", "679385421"]
    assert_equal expected, @solver.board
  end

  def test_it_can_create_puzzle_hash
    expected = {"a1": " ", "a2": "2", "a3": "6", "a4": "5", "a5": "9", "a6": "4", "a7": "3", "a8": "1", "a9": "7",
                "b1": "7", "b2": "1", "b3": "5", "b4": "6", "b5": "3", "b6": "8", "b7": "9", "b8": "4", "b9": "2",
                "c1": "3", "c2": "9", "c3": "4", "c4": "7", "c5": "2", "c6": "1", "c7": "8", "c8": "6", "c9": "5",
                "d1": "1", "d2": "6", "d3": "3", "d4": "4", "d5": "5", "d6": "9", "d7": "2", "d8": "7", "d9": "8",
                "e1": "9", "e2": "4", "e3": "8", "e4": "2", "e5": "6", "e6": "7", "e7": "1", "e8": "5", "e9": "3",
                "f1": "2", "f2": "5", "f3": "7", "f4": "8", "f5": "1", "f6": "3", "f7": "6", "f8": "9", "f9": "4",
                "g1": "5", "g2": "3", "g3": "1", "g4": "9", "g5": "4", "g6": "2", "g7": "7", "g8": "8", "g9": "6",
                "h1": "4", "h2": "8", "h3": "2", "h4": "1", "h5": "7", "h6": "6", "h7": "5", "h8": "3", "h9": "9",
                "i1": "6", "i2": "7", "i3": "9", "i4": "3", "i5": "8", "i6": "5", "i7": "4", "i8": "2", "i9": "1"}
    assert_equal expected, @solver.hashed
  end

end
